package section

import "fmt"

////////////////////////////////////
////////////////////////////////////
////////// I - section  ////////////
////////////////////////////////////
////////////////////////////////////
//    SCHEMA
//
//    |--b--|
//    |     |
//  --******* tf
//  |   r*r
//  |    *
//  h    tw
//  |    *
//  |    *
//  |   r*r
//  --*******

type Isection struct {
	Name   string
	Height float64 //h
	Width  float64 //b
	Thk_f  float64 //tf
	Thk_w  float64 //tw
	Radius float64 //r
}

var Isections = []Isection{
	///
	/// ASCM STO 20-93. PROFILE "B"
	///
	{"10B1-ASCM", 0.1000, 0.0550, 0.0041, 0.0057, 0.0070},
	{"12B1-ASCM", 0.1176, 0.0640, 0.0038, 0.0051, 0.0070},
	{"12B2-ASCM", 0.1200, 0.0640, 0.0044, 0.0063, 0.0070},
	{"14B1-ASCM", 0.1374, 0.0730, 0.0038, 0.0056, 0.0070},
	{"14B2-ASCM", 0.1400, 0.0730, 0.0047, 0.0069, 0.0070},
	{"16B1-ASCM", 0.1570, 0.0820, 0.0040, 0.0059, 0.0090},
	{"16B2-ASCM", 0.1600, 0.0820, 0.0050, 0.0074, 0.0090},
	{"18B1-ASCM", 0.1770, 0.0910, 0.0043, 0.0065, 0.0090},
	{"18B2-ASCM", 0.1800, 0.0910, 0.0053, 0.0080, 0.0090},
	{"20B1-ASCM", 0.2000, 0.1000, 0.0055, 0.0080, 0.0110},
	{"25B1-ASCM", 0.2480, 0.1240, 0.0050, 0.0080, 0.0120},
	{"25B2-ASCM", 0.2500, 0.1250, 0.0060, 0.0090, 0.0120},
	{"30B1-ASCM", 0.2980, 0.1490, 0.0055, 0.0080, 0.0130},
	{"30B2-ASCM", 0.3000, 0.1500, 0.0065, 0.0090, 0.0130},
	{"35B1-ASCM", 0.3460, 0.1740, 0.0060, 0.0090, 0.0140},
	{"35B2-ASCM", 0.3500, 0.1750, 0.0070, 0.0110, 0.0140},
	{"40B1-ASCM", 0.3960, 0.1990, 0.0070, 0.0110, 0.0160},
	{"40B2-ASCM", 0.4000, 0.2000, 0.0080, 0.0130, 0.0160},

	///
	/// ASCM STO 20-93. PROFILE "K"
	///
	{"20K2-ASCM", 0.2000, 0.2000, 0.0080, 0.0120, 0.0130},
	{"25K2-ASCM", 0.2500, 0.2500, 0.0090, 0.0140, 0.0160},
	{"30K2-ASCM", 0.3000, 0.3000, 0.0100, 0.0150, 0.0180},
	{"35K2-ASCM", 0.3500, 0.3500, 0.0120, 0.0190, 0.0200},
	{"40K2-ASCM", 0.4000, 0.4000, 0.0130, 0.0210, 0.0220},

	///
	/// ASCM STO 20-93. PROFILE "SH"
	///
	{"100SH1-ASCM", 0.9900, 0.3200, 0.0160, 0.0210, 0.0300},

	///
	/// European code. PROFILE "IPE"
	///
	{"IPE160", 0.1600, 0.0820, 0.0050, 0.0074, 0.0090},
	{"IPE180", 0.1800, 0.0910, 0.0053, 0.0080, 0.0090},
	{"IPE200", 0.2000, 0.1000, 0.0056, 0.0085, 0.0120},
	{"IPE240", 0.2400, 0.1200, 0.0062, 0.0098, 0.0150},
	{"IPE300", 0.3000, 0.1500, 0.0071, 0.0107, 0.0150},
	{"IPE500", 0.5000, 0.2000, 0.0102, 0.0160, 0.0370},
	{"IPE550", 0.5500, 0.2100, 0.0111, 0.0172, 0.0412},

	///
	/// European code. PROFILE "HEA"
	///
	{"HEA160", 0.1520, 0.1600, 0.0060, 0.0090, 0.0150},
	{"HEA180", 0.1710, 0.1800, 0.0060, 0.0095, 0.0150},
	{"HEA200", 0.1900, 0.2000, 0.0065, 0.0100, 0.0180},
	{"HEA240", 0.2300, 0.2400, 0.0075, 0.0120, 0.0210},
	{"HEA300", 0.2900, 0.3000, 0.0085, 0.0140, 0.0270},
	{"HEA500", 0.4900, 0.3000, 0.0120, 0.0230, 0.0270},

	///
	/// European code. PROFILE "HEB"
	///
	{"HEB140", 0.1400, 0.1400, 0.0070, 0.0120, 0.0120},
	{"HEB160", 0.1600, 0.1600, 0.0080, 0.0130, 0.0150},
	{"HEB180", 0.1800, 0.1800, 0.0085, 0.0140, 0.0150},
	{"HEB200", 0.2000, 0.2000, 0.0090, 0.0150, 0.0180},
	{"HEB240", 0.2400, 0.2400, 0.0100, 0.0170, 0.0210},
	{"HEB300", 0.3000, 0.3000, 0.0110, 0.0190, 0.0270},
}

func (is Isection) Geo(prec float64) string {
	var geo string

	geo += fmt.Sprintf("h = %.5f;\n", h())
	geo += fmt.Sprintf("b = %.5f;\n", b())
	geo += fmt.Sprintf("s = %.5f;\n", tw())
	geo += fmt.Sprintf("t = %.5f;\n", tf())
	geo += fmt.Sprintf("R = %.5f;\n", r())
	geo += fmt.Sprintf("prec = %.5f;\n", prec)
	geo += fmt.Sprintf("prec2 = %.5f;\n", tw()) //h);
	geo += `
    Point(0)={0,0,0,prec2};
    Point(1)={b,0,0,prec2};
    Point(2)={b,t,0,prec2};
    Point(3)={b/2+s/2+R,t,0,prec};
    Point(4)={b/2+s/2+R,t+R,0,prec};
    Point(5)={b/2+s/2,t+R,0,prec};
    Point(6)={b/2+s/2,h-t-R,0,prec};
    Point(7)={b/2+s/2+R,h-t-R,0,prec};
    Point(8)={b/2+s/2+R,h-t,0,prec};
    Point(9)={b,h-t,0,prec2};
    Point(10)={b,h,0,prec2};
    Point(11)={0,h,0,prec2};
    Point(12)={0,h-t,0,prec2};
    Point(13)={b/2-s/2-R,h-t,0,prec};
    Point(14)={b/2-s/2,h-t-R,0,prec};
    Point(15)={b/2-s/2-R,h-t-R,0,prec};
    Point(16)={b/2-s/2,t+R,0,prec};
    Point(17)={b/2-s/2-R,t+R,0,0,prec};
    Point(18)={b/2-s/2-R,t,0,prec};
    Point(19)={0,t,0,prec2};
    Point(20)={b/2+s/2,h/2,0,prec2};
    Point(21)={b/2-s/2,h/2,0,prec2};
    Point(22)={b/2-s/2,t,0,prec2};
    Point(23)={b/2+s/2,t,0,prec2};
    Point(24)={b/2-s/2,h-t,0,prec2};
    Point(25)={b/2+s/2,h-t,0,prec2};
    Line(1) = {0, 1};
    Line(2) = {1, 2};
    Line(3) = {2, 3};
    Line(4) = {0, 19};
    Line(5) = {19, 18};
    Line(6) = {8, 9};
    Line(7) = {9, 10};
    Line(8) = {10, 11};
    Line(9) = {11, 12};
    Line(10) = {12, 13};
    Line(11) = {6, 20};
    Line(12) = {20, 5};
    Line(13) = {16, 21};
    Line(14) = {21, 14};
    Circle(15) = {6, 7, 8};
    Circle(16) = {14, 15, 13};
    Circle(17) = {18, 17, 16};
    Circle(18) = {3, 4, 5};
    Line(19) = {18, 22};
    Line(20) = {22, 16};
    Line(21) = {3, 23};
    Line(22) = {23, 5};
    Line(23) = {13, 24};
    Line(24) = {24, 14};
    Line(25) = {6, 25};
    Line(26) = {25, 8};
    Line Loop(27) = {1, 2, 3, 21, 22, -12, -11, 25, 26, 6, 7, 8, 9, 10, 23, 24, -14, -13, -20, -19, -5, -4};
    Plane Surface(28) = {27};
    Line Loop(29) = {16, 23, 24};
    Plane Surface(30) = {29};
    Line Loop(31) = {25, 26, -15};
    Plane Surface(32) = {31};
    Line Loop(33) = {20, -17, 19};
    Plane Surface(34) = {33};
    Line Loop(35) = {18, -22, -21};
    Plane Surface(36) = {35};
`
	return geo
}
